Front,Back,Tags,Notes
"Create a new user 'alice' with home directory /home/alice","useradd alice","user_management",""
"Set password for user alice to expire in 30 days","chage -M 30 alice","user_management",""
"Add user bob to the wheel group","usermod -aG wheel bob","user_management",""
"Create a group called developers with GID 1500","groupadd -g 1500 developers","user_management",""
"Set file permissions to read/write for owner, read for group and others","chmod 644 filename","permissions",""
"Change ownership of file to user alice and group developers","chown alice:developers filename","permissions",""
"Create a hard link named backup pointing to original.txt","ln original.txt backup","file_operations",""
"Create a symbolic link named shortcut pointing to /var/log/messages","ln -s /var/log/messages shortcut","file_operations",""
"Archive directory /home/alice into alice.tar.gz","tar -czf alice.tar.gz /home/alice","file_operations",""
"Extract alice.tar.gz preserving permissions","tar -xzf alice.tar.gz","file_operations",""
"Find all files owned by user alice","find / -user alice 2>/dev/null","file_operations",""
"Find all files larger than 100MB","find / -size +100M 2>/dev/null","file_operations",""
"Search for lines containing 'error' in /var/log/messages","grep -i error /var/log/messages","text_processing",""
"Show last 20 lines of /var/log/messages","tail -20 /var/log/messages","text_processing",""
"Count number of lines in file.txt","wc -l file.txt","text_processing",""
"Start the httpd service","systemctl start httpd","systemd",""
"Enable httpd service to start at boot","systemctl enable httpd","systemd",""
"Check status of httpd service","systemctl status httpd","systemd",""
"Reload systemd daemon after unit file changes","systemctl daemon-reload","systemd",""
"List all failed services","systemctl --failed","systemd",""
"Set default target to multi-user","systemctl set-default multi-user.target","systemd",""
"Boot into rescue mode","systemctl rescue","systemd",""
"View system journal for the last hour","journalctl --since ""1 hour ago""","systemd",""
"View journal for httpd service only","journalctl -u httpd","systemd",""
"Make journal persistent across reboots","mkdir -p /var/log/journal","systemd",""
"Create a partition on /dev/sdb using fdisk","fdisk /dev/sdb (then n, p, 1, enter, enter, w)","storage",""
"Create an ext4 filesystem on /dev/sdb1","mkfs.ext4 /dev/sdb1","storage",""
"Mount /dev/sdb1 to /mnt/data","mount /dev/sdb1 /mnt/data","storage",""
"Add /dev/sdb1 to /etc/fstab for automatic mounting","echo ""/dev/sdb1 /mnt/data ext4 defaults 0 2"" >> /etc/fstab","storage",""
"Create a physical volume from /dev/sdc","pvcreate /dev/sdc","lvm",""
"Create volume group 'vgdata' using /dev/sdc","vgcreate vgdata /dev/sdc","lvm",""
"Create logical volume 'lvdata' of 2GB in vgdata","lvcreate -L 2G -n lvdata vgdata","lvm",""
"Extend logical volume lvdata by 1GB","lvextend -L +1G /dev/vgdata/lvdata","lvm",""
"Resize ext4 filesystem after extending LV","resize2fs /dev/vgdata/lvdata","lvm",""
"Resize XFS filesystem after extending LV","xfs_growfs /mount/point","lvm",""
"Display volume group information","vgdisplay","lvm",""
"Display logical volume information","lvdisplay","lvm",""
"Create a swap partition on /dev/sdd1","mkswap /dev/sdd1","storage",""
"Enable swap on /dev/sdd1","swapon /dev/sdd1","storage",""
"Add swap to /etc/fstab","echo ""/dev/sdd1 swap swap defaults 0 0"" >> /etc/fstab","storage",""
"Check current SELinux mode","getenforce","selinux",""
"Set SELinux to permissive mode temporarily","setenforce 0","selinux",""
"Set SELinux to enforcing mode permanently","Edit /etc/selinux/config, set SELINUX=enforcing","selinux",""
"View SELinux context of a file","ls -Z filename","selinux",""
"Restore default SELinux context for /var/www/html","restorecon -R /var/www/html","selinux",""
"List all SELinux booleans","getsebool -a","selinux",""
"Enable httpd_can_network_connect boolean","setsebool -P httpd_can_network_connect on","selinux",""
"View SELinux denials in audit log","ausearch -m AVC","selinux",""
"Check all SELinux denials from boot time","ausearch -m AVC,USER_AVC,SELINUX_ERR,USER_SELINUX_ERR -ts boot","selinux","Comprehensive denial search"
"Search for today's SELinux denials","ausearch -m AVC,USER_AVC,SELINUX_ERR,USER_SELINUX_ERR -ts today","selinux","Use for daily troubleshooting"
"Generate policy module from specific command denials","ausearch -c 'httpd' --raw | audit2allow -M my-httpd","selinux","Replace 'httpd' with actual command name"
"Create readable policy suggestions from recent denials","ausearch -m AVC -ts recent | audit2allow -R","selinux","Shows interface calls instead of raw allow rules"
"Install custom SELinux policy module","semodule -X 300 -i my-module.pp","selinux","Use after generating with audit2allow"
"Allow HTTP traffic through firewall","firewall-cmd --add-service=http --permanent","firewall",""
"Allow port 8080 through firewall","firewall-cmd --add-port=8080/tcp --permanent","firewall",""
"Reload firewall configuration","firewall-cmd --reload","firewall",""
"List all firewall rules","firewall-cmd --list-all","firewall",""
"Remove HTTP service from firewall","firewall-cmd --remove-service=http --permanent","firewall",""
"Show current firewall zone","firewall-cmd --get-active-zones","firewall",""
"Install package using dnf","dnf install package-name","package_management",""
"Update all packages","dnf update","package_management",""
"Search for package containing a file","dnf provides /path/to/file","package_management",""
"List installed packages","dnf list installed","package_management",""
"Remove a package","dnf remove package-name","package_management",""
"Enable a repository","dnf config-manager --enable repo-name","package_management",""
"Schedule a job to run at 2:30 AM daily","echo ""command"" | at 02:30","scheduling",""
"Add a cron job for user alice","crontab -u alice -e","scheduling",""
"Run script every 5 minutes","*/5 * * * * /path/to/script","scheduling",""
"Run script daily at midnight","0 0 * * * /path/to/script","scheduling",""
"List cron jobs for current user","crontab -l","scheduling",""
"Configure static IP 192.168.1.100/24","nmcli con modify connection-name ipv4.addresses 192.168.1.100/24","networking",""
"Set DNS server to 8.8.8.8","nmcli con modify connection-name ipv4.dns 8.8.8.8","networking",""
"Bring up network connection","nmcli con up connection-name","networking",""
"Show network connections","nmcli con show","networking",""
"Set hostname to server1.example.com","hostnamectl set-hostname server1.example.com","networking",""
"Copy SSH public key to remote server","ssh-copy-id user@server","ssh",""
"Generate SSH key pair","ssh-keygen -t rsa","ssh",""
"Connect to server via SSH with specific key","ssh -i /path/to/key user@server","ssh",""
"Disable password authentication in SSH","Edit /etc/ssh/sshd_config, set PasswordAuthentication no","ssh",""
"Pull container image from registry","podman pull registry.redhat.io/ubi8/ubi","containers",""
"Run container with port mapping","podman run -d -p 8080:80 nginx","containers",""
"List running containers","podman ps","containers",""
"Stop container by ID","podman stop container-id","containers",""
"Build container from Containerfile","podman build -t myapp .","containers",""
"Run container as systemd service","podman generate systemd --new container-name > /etc/systemd/system/container.service","containers",""
"Mount host directory in container","podman run -v /host/path:/container/path image","containers",""
"View container logs","podman logs container-name","containers",""
"Check disk usage","df -h","monitoring",""
"Check memory usage","free -h","monitoring",""
"View running processes by CPU usage","top","monitoring",""
"View processes by memory usage","ps aux --sort=-%mem","monitoring",""
"Find process using specific port","lsof -i :80","monitoring",""
"Kill process by PID","kill PID","monitoring",""
"Kill all processes by name","killall process-name","monitoring",""
"Change process priority","renice -n 5 PID","monitoring",""
"View system uptime and load","uptime","monitoring",""
"Set umask to 022","umask 022","security",""
"Configure sudo access for user","visudo (add: user ALL=(ALL) ALL)","security",""
"Lock user account","usermod -L username","security",""
"Unlock user account","usermod -U username","security",""
"Set password aging for user","chage -M 90 -m 7 -W 7 username","security",""
"View failed login attempts","lastb","security",""
"Repair filesystem","fsck /dev/device","troubleshooting",""
"Boot into single user mode","Add 'single' to kernel parameters in GRUB","troubleshooting",""
"Reset root password","Boot to rescue, mount filesystems, chroot, passwd","troubleshooting",""
"Check network connectivity","ping -c 4 8.8.8.8","troubleshooting",""
"Trace network route","traceroute destination","troubleshooting",""
"Test DNS resolution","nslookup hostname","troubleshooting",""
"View network interface statistics","ip -s link show","troubleshooting",""
"Configure static IP 192.168.1.100/24 and DNS 8.8.8.8 using nmcli on connection 'ens33'","nmcli con modify ens33 ipv4.addresses 192.168.1.100/24 ipv4.dns 8.8.8.8 ipv4.method manual && nmcli con up ens33","rhel9_specific,networking","Note: ipv4.method manual is required for static IP"
"Create podman container running nginx, map port 8080->80, auto-start with systemd","podman run -d --name web-server -p 8080:80 nginx && podman generate systemd --new --files --name web-server && sudo cp container-web-server.service /etc/systemd/system/ && sudo systemctl enable container-web-server.service","containers,rhel9_specific","New RHCSA requirement - containers with systemd integration"
"Boot into rescue mode to reset root password on RHEL 9 (GRUB method)","At GRUB menu: e -> find linux line -> add rd.break at end -> Ctrl+X -> mount -o remount,rw /sysroot -> chroot /sysroot -> passwd -> touch /.autorelabel -> exit -> exit","boot_rescue,exam_pressure","Must remember .autorelabel for SELinux"
"Allow httpd to bind to port 8080 with SELinux (without disabling)","semanage port -a -t http_port_t -p tcp 8080","selinux,rhel9_specific","Use semanage, not setsebool for port binding"
"Create LV, extend it by 500MB, and grow XFS filesystem in one sequence","lvcreate -L 1G -n data vg01 && mkfs.xfs /dev/vg01/data && mkdir /data && mount /dev/vg01/data /data && lvextend -L +500M /dev/vg01/data && xfs_growfs /data","lvm,exam_pressure","Remember: XFS uses xfs_growfs, not resize2fs"
"Configure autofs to mount NFS share 192.168.1.100:/exports to /mnt/nfs","echo '/mnt /etc/auto.nfs --timeout=60' >> /etc/auto.master && echo 'nfs -rw 192.168.1.100:/exports' >> /etc/auto.nfs && systemctl enable autofs && systemctl start autofs","nfs,autofs,syntax_heavy","Complex syntax - practice this"
"Find all SUID files on system (exam-safe performance)","find / -perm -4000 -type f 2>/dev/null","security,file_operations","Redirect stderr to avoid permission noise"
"Configure cron job for user alice to run backup.sh every Tuesday at 3:15 AM","crontab -u alice -e -> 15 3 * * 2 /home/alice/backup.sh","scheduling,syntax_heavy","15=minutes, 3=hour, 2=Tuesday (0=Sunday)"
"Set up SSH key authentication and disable password auth","ssh-keygen -t rsa && ssh-copy-id user@server && echo 'PasswordAuthentication no' >> /etc/ssh/sshd_config && systemctl reload sshd","ssh,security","Don't forget to reload sshd after config change"
"Create swap file (not partition) of 1GB and enable permanently","fallocate -l 1G /swapfile && chmod 600 /swapfile && mkswap /swapfile && swapon /swapfile && echo '/swapfile swap swap defaults 0 0' >> /etc/fstab","storage,exam_tricks","Swap files are valid - know this alternative"
"Troubleshoot: service fails to start, check SELinux denials","systemctl status servicename && journalctl -u servicename && ausearch -m AVC -ts recent","troubleshooting,selinux","Check all three: systemctl, journalctl, ausearch"
"Set user password to expire in 90 days, warn 7 days before, min 1 day between changes","chage -M 90 -W 7 -m 1 username","user_management,syntax_heavy","-M=max, -W=warning, -m=minimum days"
"Open firewall for HTTP, HTTPS permanently and reload","firewall-cmd --permanent --add-service=http --add-service=https && firewall-cmd --reload","firewall,rhel9_specific","Can chain --add-service options"
"Configure persistent journal logging","mkdir -p /var/log/journal && systemctl restart systemd-journald","systemd,rhel9_specific","Directory must exist for persistence"
"Reset forgotten root password using single user mode (systemd method)","At GRUB: e -> linux line -> add systemd.unit=rescue.target -> Ctrl+X -> enter root password -> passwd -> systemctl default","boot_rescue,systemd","Systemd method - know both rd.break and rescue.target"
"Mount NFS share temporarily and add to fstab for permanent mounting","mount -t nfs 192.168.1.100:/exports /mnt/nfs && echo '192.168.1.100:/exports /mnt/nfs nfs defaults 0 0' >> /etc/fstab","nfs,storage","Test mount first, then add to fstab"
"Create user with specific UID 5000, home dir /opt/appuser, shell /sbin/nologin","useradd -u 5000 -d /opt/appuser -s /sbin/nologin -m appuser","user_management,exam_requirements","-m creates home dir, even if custom location"
"Check which process is using port 80","ss -tlnp | grep :80 OR lsof -i :80","monitoring,alternatives","Know both ss and lsof methods"
"Configure timezone to America/New_York","timedatectl set-timezone America/New_York","system_config,rhel9_specific","Use timedatectl, not /etc/localtime symlinks"
"Set hostname to server1.example.com permanently","hostnamectl set-hostname server1.example.com","networking,rhel9_specific","hostnamectl is the RHEL 9 way"
"Find files modified in last 7 days in /var/log","find /var/log -mtime -7 -type f","file_operations,exam_tricks","-mtime -7 means less than 7 days ago"
"Enable and start httpd, then check if it's listening on port 80","systemctl enable --now httpd && ss -tlnp | grep :80","systemd,verification","--now enables and starts in one command"
"Create logical volume that uses all available space in VG","lvcreate -l 100%FREE -n data vg01","lvm,exam_tricks","-l 100%FREE uses all remaining space"
"Restore SELinux contexts for entire /var/www directory","restorecon -Rv /var/www","selinux,common_task","-R recursive, -v verbose"
"Configure rsyslog to log all mail facility messages to /var/log/mail.log","echo 'mail.* /var/log/mail.log' >> /etc/rsyslog.conf && systemctl restart rsyslog","logging,syntax_heavy","Format: facility.priority destination"
"Create archive of /home excluding .cache directories","tar --exclude='*.cache*' -czf home-backup.tar.gz /home","file_operations,exam_tricks","--exclude before source directory"
"Change process priority of PID 1234 to nice value 10","renice 10 1234","process_management,syntax_order","renice [priority] [PID]"
"Configure autofs timeout of 30 seconds for all mounts","Edit /etc/auto.master, add --timeout=30 to master map entries","autofs,advanced","Global timeout in master map"
"Set ACL to give user alice read/write access to /shared/file","setfacl -m u:alice:rw /shared/file","acl,permissions","Format: u:user:permissions"
"Check ACL permissions on a file","getfacl /path/to/file","acl,verification","Shows effective permissions including ACLs"
"Force user to change password on next login","chage -d 0 username OR passwd -e username","user_management,alternatives","Know both chage and passwd methods"
"Configure sudo access for wheel group without password","visudo -> %wheel ALL=(ALL) NOPASSWD: ALL","security,sudo","% indicates group, NOPASSWD removes password requirement"
"Find largest files in filesystem (top 10)","find / -type f -exec ls -la {} \; 2>/dev/null | sort -nk5 | tail -10","file_operations,advanced","Complex but useful for disk space issues"
"Create swap partition on /dev/sdb1 and activate","fdisk /dev/sdb -> t -> 82 -> w -> mkswap /dev/sdb1 -> swapon /dev/sdb1","storage,full_process","Complete partition to swap workflow"
"Configure logrotate for /var/log/myapp.log (keep 4 weeks, compress)","Create /etc/logrotate.d/myapp: /var/log/myapp.log { weekly rotate 4 compress missingok notifempty }","logging,config_file","Common logrotate options"
"Enable SELinux boolean httpd_can_network_connect permanently","setsebool -P httpd_can_network_connect on","selinux,common_bool","-P makes change persistent across reboots"
"Configure network bond with ens3 and ens8 as slaves","nmcli con add type bond con-name bond0 ifname bond0 && nmcli con add type ethernet slave-type bond con-name bond0-slave1 ifname ens3 master bond0 && nmcli con add type ethernet slave-type bond con-name bond0-slave2 ifname ens8 master bond0","networking,advanced","Complex networking - practice this syntax"
"Check system memory usage including swap","free -h && cat /proc/meminfo | grep -E '(MemTotal|MemFree|SwapTotal|SwapFree)'","monitoring,system_info","Know both free and /proc/meminfo"
"Configure systemd service to start after network is available","Add 'After=network-online.target' and 'Wants=network-online.target' to [Unit] section","systemd,dependencies","Common dependency requirement"
"Mount ISO file as loop device","mount -o loop /path/to/file.iso /mnt/iso","storage,loop_devices","Useful for mounting ISO images"
"Configure grub to boot with specific kernel parameters","grub2-editenv - set 'kernelopts=existing_params new_param=value' && grub2-mkconfig -o /boot/grub2/grub.cfg","boot,grub","RHEL 9 method for persistent kernel parameters"
"List all systemd targets available","systemctl list-units --type=target --all","systemd,troubleshooting","--all shows inactive targets too"
"Configure system to boot to multi-user target by default","systemctl set-default multi-user.target","systemd,boot_targets","Changes default.target symlink"